heat_template_version: 2014-10-16

description: >
  Example extra config for post-deployment

# Note extra parameters can be defined, then passed data via the
# environment parameter_defaults, without modifying the parent template
parameters:
  servers:
    type: json
  ldapserver:
    type: string
  ldapdomain:
    type: string
  ldapuser:
    type: string
  ldappassword:
    type: string
  DeployIdentifier:
    type: string
  mdmip:
    type: string
  scaleiopw:
    type: string
  

resources:

  ExtraConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        str_replace:
          template: |
            #!/bin/bash
            # We only need to run this on controller nodes
            if [ `hostname | grep cont | wc -l` -ge 1 ]
            then
            # LDAP Domain Config
                if [ `getsebool authlogin_nsswitch_use_ldap | awk {'print $NF'}` = off ] ; then setsebool -P authlogin_nsswitch_use_ldap=on; fi
            	mkdir -p /etc/keystone/domains/
            	touch /etc/keystone/domains/keystone._ldapdomain_.conf
                chown -R keystone /etc/keystone/domains
                restorecon -R /etc/keystone
                openstack-config --set /etc/keystone/domains/keystone._ldapdomain_.conf ldap url _ldapserver_
                openstack-config --set /etc/keystone/domains/keystone._ldapdomain_.conf ldap user _ldapuser_
                openstack-config --set /etc/keystone/domains/keystone._ldapdomain_.conf ldap password _ldappassword_
                openstack-config --set /etc/keystone/domains/keystone._ldapdomain_.conf ldap user_tree_dn "cn=users,cn=accounts,dc=example,dc=com"
                openstack-config --set /etc/keystone/domains/keystone._ldapdomain_.conf ldap user_objectclass inetUser
                openstack-config --set /etc/keystone/domains/keystone._ldapdomain_.conf ldap user_id_attribute uid
                openstack-config --set /etc/keystone/domains/keystone._ldapdomain_.conf ldap user_name_attribute uid
                openstack-config --set /etc/keystone/domains/keystone._ldapdomain_.conf ldap user_pass_attribute
                openstack-config --set /etc/keystone/domains/keystone._ldapdomain_.conf identity driver keystone.identity.backends.ldap.Identity

                # Temporary Fix needed because keystone::roles::admin can't handle domains
                openstack-config --set /etc/keystone/keystone.conf  identity domain_specific_drivers_enabled True
                systemctl restart openstack-keystone

                # lbaasv2 config
                # We need to check if lbaasv2 is already configured
                if [ `neutron-db-manage --service lbaas history | grep lbaasv2 | wc -l` -eq 0 ] 
                then
                     if [ `hiera bootstrap_nodeid` = `hostname -s` ]
                     then
                          neutron-db-manage --service lbaas --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head
                     fi
                     openstack-config --set /etc/neutron/lbaas_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver
                     openstack-config --set /etc/neutron/lbaas_agent.ini DEFAULT device_driver neutron_lbaas.drivers.haproxy.namespace_driver.HaproxyNSDriver
                     systemctl stop neutron-lbaas-agent.service
                     systemctl disable neutron-lbaas-agent.service
                     systemctl enable neutron-lbaasv2-agent.service
                     systemctl start neutron-lbaasv2-agent.service
                fi
            fi
  
            # my install only - create scaleio repo from MDM
            cat << EOF > /etc/yum.repos.d/scaleio.repo
            [scaleio]
            name = scaleio
            baseurl = http://_mdmip_/scaleio
            enabled = 1
            gpgcheck = 0
            EOF

            # ScaleIO Config
            
            if [ `rpm -qa | grep EMC-ScaleIO | wc -l` -eq 0 ]
            then
               export MDM_IP=_mdmip_ 
               yum -y install EMC-ScaleIO-sdc EMC-ScaleIO-lia CSCA_EMC_emccli
               # Install sds only on compute nodes
               if [ `hostname | grep comp | wc -l` -ge 1 ]
               then
               yum -y install EMC-ScaleIO-sds
               SCALEIOIP=`ip a | grep -A 3 @bond2 | grep inet | awk {'print $2'} | cut -d/ -f1`
               CLI="/toolkit/emccli/cli"
               $CLI --mdm_ip _mdmip_ --approve_certificate --login --username admin --password _scaleiopw_
               $CLI --mdm_ip _mdmip_ --approve_certificate --add_sds --sds_ip ${SCALEIOIP} --storage_pool_name sp1 --device_path /dev/vdb --protection_domain_name pd1 --sds_name `hostname -s`
               fi
            fi
            
            # Need to permit password authentication for ScaleIO - this runs on all nodes
            sed -i 's/^PasswordAuth.*/PasswordAuthentication yes/' /etc/ssh/sshd_config 
            systemctl restart sshd
          params: 
            _ldapserver_: {get_param: ldapserver}
            _ldapdomain_: {get_param: ldapdomain}
            _ldappassword_: {get_param: ldappassword}
            _ldapuser_: {get_param: ldapuser}
            _mdmip_: {get_param: mdmip}
            _scaleiopw_: {get_param: scaleiopw}

  ExtraDeployments:
    type: OS::Heat::SoftwareDeployments
    properties:
      name: ExtraDeployments
      servers:  {get_param: servers}
      config: {get_resource: ExtraConfig}
      actions: ['CREATE','UPDATE'] 
      input_values:
        deploy_identifier: {get_param: DeployIdentifier}
